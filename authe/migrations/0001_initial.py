# Generated by Django 3.0.8 on 2020-11-27 12:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='БазаМагазин',
            fields=[
                ('номербазы', models.IntegerField(db_column='НомерБазы', primary_key=True, serialize=False)),
                ('номермагазина', models.IntegerField(blank=True, db_column='НомерМагазина', null=True)),
            ],
            options={
                'db_table': 'БазаМагазин',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Магазины',
            fields=[
                ('номермагазина', models.AutoField(db_column='НомерМагазина', primary_key=True, serialize=False)),
                ('класс', models.CharField(blank=True, db_column='Класс', max_length=70, null=True)),
                ('заведующий', models.CharField(blank=True, db_column='Заведующий', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Магазины',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='НазваниеМагазинов',
            fields=[
                ('номермагазина', models.IntegerField(db_column='НомерМагазина', primary_key=True, serialize=False)),
                ('название', models.CharField(blank=True, db_column='Название', max_length=40, null=True)),
            ],
            options={
                'db_table': 'НазваниеМагазинов',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Отделы',
            fields=[
                ('номеротдела', models.AutoField(db_column='НомерОтдела', primary_key=True, serialize=False)),
                ('тип', models.CharField(blank=True, db_column='Тип', max_length=40, null=True)),
                ('заведующий', models.CharField(blank=True, db_column='Заведующий', max_length=40, null=True)),
            ],
            options={
                'db_table': 'Отделы',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ТоварБазы',
            fields=[
                ('артикул', models.AutoField(db_column='Артикул', primary_key=True, serialize=False)),
                ('тип', models.CharField(blank=True, db_column='Тип', max_length=40, null=True)),
                ('количество', models.IntegerField(blank=True, db_column='Количество', null=True)),
                ('цена', models.IntegerField(blank=True, db_column='Цена', null=True)),
            ],
            options={
                'db_table': 'ТоварБазы',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ТоварБазыАртикул',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('артикул', models.IntegerField(db_column='Артикул')),
                ('номербазы', models.IntegerField(blank=True, db_column='НомерБазы', null=True)),
                ('название', models.CharField(blank=True, db_column='Название', max_length=40, null=True)),
            ],
            options={
                'db_table': 'ТоварБазыАртикул',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ТоварМагазин',
            fields=[
                ('артикул', models.IntegerField(db_column='Артикул', primary_key=True, serialize=False)),
                ('номермагазина', models.IntegerField(db_column='НомерМагазина')),
                ('тип', models.CharField(blank=True, db_column='Тип', max_length=40, null=True)),
                ('количество', models.IntegerField(blank=True, db_column='Количество', null=True)),
                ('цена', models.IntegerField(blank=True, db_column='Цена', null=True)),
            ],
            options={
                'db_table': 'ТоварМагазинов',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ТорговыеБазы',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('названиебазы', models.CharField(blank=True, db_column='НазваниеБазы', max_length=50, null=True, unique=True)),
                ('представитель', models.CharField(blank=True, db_column='Представитель', max_length=100, null=True)),
                ('адрес', models.CharField(blank=True, db_column='Адрес', max_length=100, null=True)),
            ],
            options={
                'db_table': 'ТорговыеБазы',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ОтделТовары',
            fields=[
                ('артикул', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='authe.ТоварМагазин')),
                ('номермагазина', models.IntegerField(blank=True, db_column='НомерМагазина', verbose_name='ТоварМагазинов')),
                ('номеротдела', models.IntegerField(blank=True, db_column='НомерОтдела', null=True)),
                ('название', models.CharField(blank=True, db_column='Название', max_length=40, null=True)),
            ],
            options={
                'db_table': 'ОтделТовар',
                'managed': False,
            },
        ),
    ]
